{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onSelectedTodo","selectedTodo","className","map","id","title","completed","classNames","type","onClick","TodoFilter","setQuery","setStatusSelect","query","onChange","event","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","setClose","userId","useState","user","setUser","useEffect","getUser","users","href","email","name","App","setTodos","initialTodos","setInitialTodos","setSelectedTodo","isLoading","setIsLoading","statusSelect","searchByInput","todoTitle","searchInput","toLowerCase","includes","todo","filter","Error","todoId","find","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce1e7501.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onSelectedTodo: (id: number) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onSelectedTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(({ id, title, completed }) => {\n        return (\n          <tr\n            data-cy=\"todo\"\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-danger': !completed,\n                'has-text-success': completed,\n              })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelectedTodo(id)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far',\n                    { 'fa-eye-slash': selectedTodo?.id === id },\n                    { 'fa-eye': selectedTodo?.id !== id },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  setStatusSelect: (item: string) => void;\n  setQuery: (item: string) => void;\n  query: string\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setQuery,\n  setStatusSelect,\n  query,\n}) => {\n  const clearInput = () => {\n    setQuery('');\n  };\n\n  const handleQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleStatusSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setStatusSelect(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onChange={handleStatusSelect}>\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearInput}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\n\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo;\n  setClose: (item: null) => void\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, setClose }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = selectedTodo;\n\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(userId).then(users => {\n      setUser(users);\n    });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n            { /* eslint-disable-next-line jsx-a11y/control-has-associated-label */ }\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setClose(null)}\n            />\n          </header>\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\n\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [initialTodos, setInitialTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [query, setQuery] = useState('');\n  const [statusSelect, setStatusSelect] = useState('all');\n\n  const onSelectedTodo = (todoId: number) => {\n    setSelectedTodo(todos.find(todo => todo.id === todoId) || null);\n  };\n\n  const setClose = (item: null) => {\n    setSelectedTodo(item);\n  };\n\n  const searchByInput = (todoTitle: string, searchInput: string) => {\n    return todoTitle.toLowerCase().includes(searchInput.toLowerCase());\n  };\n\n  useEffect(() => {\n    getTodos().then(todo => {\n      setTodos(todo);\n      setInitialTodos(todo);\n      setIsLoading(false);\n    });\n  }, []);\n\n  useEffect(() => {\n    setTodos(\n      initialTodos.filter(({ title, completed }) => {\n        switch (statusSelect) {\n          case 'all':\n            return searchByInput(title, query);\n\n          case 'active':\n            return !completed && searchByInput(title, query);\n\n          case 'completed':\n            return completed && searchByInput(title, query);\n\n          default:\n            throw new Error('Something went wrong, contact support');\n        }\n      }),\n    );\n  }, [initialTodos, query, statusSelect]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter setQuery={setQuery} setStatusSelect={setStatusSelect} query={query} />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={todos}\n                  onSelectedTodo={onSelectedTodo}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && <TodoModal selectedTodo={selectedTodo} setClose={setClose} />}\n\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}